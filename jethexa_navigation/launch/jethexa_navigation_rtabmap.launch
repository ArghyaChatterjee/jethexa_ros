<?xml version="1.0"?>
<launch>
	<arg name="robot_name"  default="jethexa" />
	<arg name="tf_prefix"   default="jethexa" />
	<arg name="master_name" default="$(arg robot_name)"/>
	
	<!--whether to use depth camera to simulate Lidar-->
    	<arg name="depth_camera_name" default="camera" />
	<arg name="map_topic"  default="/map"/>
	<arg name="scan_topic" default="/$(arg robot_name)/scan"/>
	<arg name="odom_topic" default="/$(arg robot_name)/odom/filtered"/>
	<arg name="cmd_vel_topic" default="/$(arg robot_name)/cmd_vel"/>

	<arg name="odom_frame_id" default="$(arg tf_prefix)/odom"/>
	<arg name="base_frame_id"  default="$(arg tf_prefix)/base_link"/>
	<arg name="map_frame_id"  default="$(arg tf_prefix)/map"/>
	<arg name="move_base_result" default="move_base/result" />
	<arg name="clicked_point" default="clicked_point" />

	<arg name="rtabmap_map_path" default="~/.ros/rtabmap.db" />

	<group ns="$(arg robot_name)">
		<!-- URDF description of robot -->
    	<include file="$(find jethexa_description)/launch/description.launch">
        	<arg name="robot_name" value="$(arg robot_name)" />
        	<arg name="tf_prefix"  value="$(arg tf_prefix)" />
    	</include>
    		<!-- Lidar -->
    		<include file="$(find jethexa_peripherals)/launch/lidar.launch">
        		<arg name="tf_prefix"  value="$(arg tf_prefix)" />
        		<arg name="scan_topic" value="$(arg scan_topic)" />
    		</include>

		<!-- depth camera -->
    		<include file="$(find jethexa_peripherals)/launch/Halley.launch">
        		<arg name="tf_prefix"  value="$(arg tf_prefix)" />
		</include>
		 <node pkg="tf2_ros"
           		type="static_transform_publisher"
           		name="camera_link_2_base_link"
           		args="0.065 0.0 0.07 0 0 0 $(arg tf_prefix)/base_link $(arg tf_prefix)/camera_link" >
     		</node>

    		<!-- robot motion control -->
    		<include file="$(find jethexa_controller)/launch/jethexa_controller.launch">
        		<arg name="robot_name" value="$(arg robot_name)" />
        		<arg name="tf_prefix"  value="$(arg tf_prefix)" />
			<arg name="tf_enable" value="false" />
			<arg name="odom_enable" value="false" />
    		</include>

			<!-- handle control -->
			<include file="$(find jethexa_peripherals)/launch/joystick_control.launch" />

			<!-- posture sensor -->
			<!-- <include file="$(find jethexa_peripherals)/launch/imu.launch">
					<arg name="tf_prefix" value="$(arg tf_prefix)" />
					<arg name="freq"      value="100" />
			</include> -->

			<!-- Lidar simulates odometer -->
			<include file="$(find jethexa_slam)/launch/include/rf2o_laser_odometry.launch">
				<arg name="scan_topic"           value="$(arg scan_topic)" />
				<arg name="odom_topic" 		 value="odom/laser" />
				<arg name="odom_frame_id" 	 value="$(arg odom_frame_id)" />
				<arg name="base_frame_id"  	 value="$(arg base_frame_id)" />
				<arg name="laser_frame_id" 	 value="$(arg tf_prefix)/laser_link" />
			</include>

			<!-- odometer integrates filter -->
			<include file="$(find jethexa_slam)/launch/include/jethexa_ekf.launch">
				<arg name="tf_prefix"  value="$(arg tf_prefix)" />
				<arg name="robot_name" value="$(arg robot_name)" />
			</include>
				
		<!-- start the AMCL Adaptive Monte Carlo Localization algorithm package -->
		<!--
		<include file="$(find jethexa_navigation)/launch/include/amcl.launch">
			<arg name="scan_topic"    value="$(arg scan_topic)"/>
			<arg name="map_topic"     value="$(arg map_topic)"/>
			<arg name="map_frame_id"  value="$(arg map_frame_id)"/>
		    <arg name="odom_frame_id" value="$(arg odom_frame_id)"/>
			<arg name="base_frame_id" value="$(arg base_frame_id)"/>
			<arg name="use_map_topic" value="true"/>
		</include>
		-->
				
		<!-- start the path planning algorithm package -->	
		<include file="$(find jethexa_navigation)/launch/include/move_base.launch"> 
			<arg name="cmd_vel_topic" value="$(arg cmd_vel_topic)" />
			
			<arg name="global_costmap_map_topic" value="$(arg map_topic)"/>
			<arg name="global_costmap_sensor_frame" value="$(arg base_frame_id)"/>
			<arg name="global_costmap_sensor_topic" value="$(arg scan_topic)"/>
			<arg name="global_costmap_global_frame" value="$(arg map_frame_id)"/>
			<arg name="global_costmap_robot_base_frame" value="$(arg base_frame_id)"/>

			<arg name="local_costmap_map_topic" value="$(arg map_topic)"/>
			<arg name="local_costmap_sensor_frame" value="$(arg base_frame_id)"/>
			<arg name="local_costmap_sensor_topic" value="$(arg scan_topic)"/>
			<arg name="local_costmap_global_frame" value="$(arg odom_frame_id)"/>
			<arg name="local_costmap_robot_base_frame" value="$(arg base_frame_id)"/>

			<arg name="teb_odom_topic" value="$(arg odom_topic)"/>
			<arg name="teb_map_frame" value="$(arg odom_frame_id)"/>
		</include>

		<include file="$(find jethexa_slam)/launch/include/rtabmap.launch" >
            		<arg name="localization"        value="true"/>
            		<arg name="database_path"       value="$(arg rtabmap_map_path)"/>
            		<arg name="subscribe_scan"      value="true"/>
			<arg name="depth_topic"         value="/$(arg robot_name)/$(arg depth_camera_name)/depth/image_raw" />
			<arg name="rgb_topic"           value="/$(arg robot_name)/$(arg depth_camera_name)/rgb/image_raw" />
			<arg name="camera_info_topic"   value="/$(arg robot_name)/$(arg depth_camera_name)/rgb/camera_info" />
			<arg name="scan_topic"          value="$(arg scan_topic)"/>
            		<arg name="map_topic"           value="$(arg map_topic)"/>
            		<arg name="map_frame"           value="$(arg map_frame_id)"/>
            		<arg name="odom_frame"          value="$(arg odom_frame_id)"/>
            		<arg name="base_frame"          value="$(arg base_frame_id)"/>
			<arg name="move_base"           value="/$(arg robot_name)/move_base"/>
        </include>

		<!-- multi-point navigation -->
		<!--
		<node pkg="jethexa_navigation" type="publish_point.py" name="publish_point" output="screen">
			<param name="map_frame" value="$(arg map_frame_id)" />
			<param name="clicked_point" value="$(arg clicked_point)" />
			<param name="move_base_result" value="$(arg move_base_result)" />
		</node> -->
	</group>
</launch>
